{"version":3,"file":"static/js/432.0f243abb.chunk.js","mappings":"wVA+GA,UA5FqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAuBA,OACE,iCACA,SAAC,KAAD,KACA,SAAC,IAAD,CAAWC,SAAS,KAApB,UACE,UAAC,IAAD,CACEC,WAAS,EACTC,UAAU,SACVC,eAAe,SACfC,WAAW,SAJb,WAME,SAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,2BAGA,UAAC,IAAD,CAAKC,UAAU,OAAOC,aAAa,MAAMC,SA7B1B,SAAAC,GACnBA,EAAMC,iBAEN,IAIMC,EAAW,CACfC,KALWH,EAAMI,cAAcC,SAASC,SAASC,MAMjDC,MALYR,EAAMI,cAAcC,SAASI,UAAUF,MAMnDG,SALeV,EAAMI,cAAcC,SAASM,aAAaJ,OAO3DK,QAAQC,IAAIX,GACZjB,GAAS6B,EAAAA,EAAAA,IAAaZ,GACvB,EAeK,WACE,SAAC,IAAD,WACE,SAAC,IAAD,CACEa,KAAK,OACLZ,KAAK,WACLa,MAAM,qBACNlB,aAAa,KACbmB,UAAQ,EACRC,GAAI,CAAEC,MAAO,cAGjB,SAAC,IAAD,WACE,SAAC,IAAD,CACEJ,KAAK,QACLZ,KAAK,YACLc,UAAQ,EACRD,MAAM,QACNlB,aAAa,KACboB,GAAI,CAAEC,MAAO,QAASC,GAAG,aAG7B,SAAC,IAAD,WACE,UAAC,IAAD,CAAaF,GAAI,CAAEE,GAAI,OAAQC,GAAG,OAAQF,MAAO,SAAWxB,QAAQ,WAApE,WACE,SAAC,IAAD,CAAY2B,QAAQ,8BAApB,uBAGA,SAAC,IAAD,CACEP,KAAM3B,EAAe,OAAS,WAC9Be,KAAK,eACLc,UAAQ,EACRM,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXC,QApEY,kBAAMpC,GAAgB,SAAAqC,GAAI,OAAKA,CAAL,GAA1B,EAqEZC,YAnEY,SAAA3B,GAC9BA,EAAMC,gBACP,EAkEmB2B,KAAK,MAJP,SAMGxC,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,QAI1C4B,MAAM,mBAIZ,SAAC,IAAD,CAAQD,KAAK,SAASpB,QAAQ,YAAYkC,SAAS,SAAC,IAAD,IAAnD,gCAMT,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/authReducer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n} from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.userName.value;\n    const email = event.currentTarget.elements.userEmail.value;\n    const password = event.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      name: name,\n      email: email,\n      password: password,\n    };\n    console.log(formData);\n    dispatch(registerUser(formData));\n  };\n\n  return (\n    <>\n    <CssBaseline />\n    <Container maxWidth=\"lg\">\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h3\" gutterBottom>\n          RegisterPage\n        </Typography>\n        <Box component=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Grid>\n            <TextField\n              type=\"text\"\n              name=\"userName\"\n              label=\"Enter your name...\"\n              autoComplete=\"on\"\n              required\n              sx={{ width: '300px' }}\n            />\n          </Grid>\n          <Grid>\n            <TextField\n              type=\"email\"\n              name=\"userEmail\"\n              required\n              label=\"Email\"\n              autoComplete=\"on\"\n              sx={{ width: '300px', mt:\"10px\" }}\n            />\n          </Grid>\n          <Grid>\n            <FormControl sx={{ mt: \"10px\", mb:\"10px\", width: '300px' }} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                Password\n              </InputLabel>\n              <OutlinedInput\n                type={showPassword ? 'text' : 'password'}\n                name=\"userPassword\"\n                required\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Password\"\n              />\n            </FormControl>\n            </Grid>\n          <Button type=\"submit\" variant=\"contained\" endIcon={<SendIcon/>}>Register</Button>\n        </Box>\n      </Grid>\n    </Container>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","showPassword","setShowPassword","maxWidth","container","direction","justifyContent","alignItems","variant","gutterBottom","component","autoComplete","onSubmit","event","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","console","log","registerUser","type","label","required","sx","width","mt","mb","htmlFor","endAdornment","position","onClick","show","onMouseDown","edge","endIcon"],"sourceRoot":""}